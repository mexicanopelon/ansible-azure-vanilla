---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    nrcaseoutput:
      stdout: |
        [
          {
            "action": {
              "type": "Allow"
            },
            "name": "arc-ASE",
            "priority": 200,
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "rules": [
              {
                "description": null,
                "destinationAddresses": [],
                "fqdnTags": [
                  "AppServiceEnvironment",
                  "WindowsUpdate"
                ],
                "name": "ASE-out",
                "protocols": [
                  {
                    "port": 80,
                    "protocolType": "Http"
                  },
                  {
                    "port": 443,
                    "protocolType": "Https"
                  },
                  {
                    "port": 1433,
                    "protocolType": "Mssql"
                  }
                ],
                "ruleType": "ApplicationRule",
                "sourceAddresses": [],
                "sourceIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-prod",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-prod",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-dev"
                ],
                "targetFqdns": [],
                "targetUrls": [],
                "terminateTls": false,
                "webCategories": []
              }
            ]
          },
          {
            "action": {
              "type": "Allow"
            },
            "name": "nrc-ASE",
            "priority": 100,
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "rules": [
              {
                "description": null,
                "destinationAddresses": [
                  "*"
                ],
                "destinationFqdns": [],
                "destinationIpGroups": [],
                "destinationPorts": [
                  "123"
                ],
                "ipProtocols": [
                  "UDP"
                ],
                "name": "NTP-out",
                "ruleType": "NetworkRule",
                "sourceAddresses": [],
                "sourceIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-prod",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-prod"
                ]
              },
              {
                "description": null,
                "destinationAddresses": [
                  "AzureMonitor"
                ],
                "destinationFqdns": [],
                "destinationIpGroups": [],
                "destinationPorts": [
                  "80",
                  "443",
                  "12000"
                ],
                "ipProtocols": [
                  "TCP"
                ],
                "name": "AzureMonitor-out",
                "ruleType": "NetworkRule",
                "sourceAddresses": [],
                "sourceIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-prod",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-prod"
                ]
              },
              {
                "description": null,
                "destinationAddresses": [
                  "*"
                ],
                "destinationFqdns": [],
                "destinationIpGroups": [],
                "destinationPorts": [
                  "12000"
                ],
                "ipProtocols": [
                  "TCP",
                  "UDP"
                ],
                "name": "ASEHealth-out",
                "ruleType": "NetworkRule",
                "sourceAddresses": [],
                "sourceIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-prod",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-fselect-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-prod"
                ]
              },
              {
                "description": null,
                "destinationAddresses": [],
                "destinationFqdns": [],
                "destinationIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-abswom-ase-prod"
                ],
                "destinationPorts": [
                  "80",
                  "443"
                ],
                "ipProtocols": [
                  "TCP"
                ],
                "name": "AppGW-in",
                "ruleType": "NetworkRule",
                "sourceAddresses": [
                  "104.215.127.107",
                  "10.73.252.128/26"
                ],
                "sourceIpGroups": []
              },
              {
                "description": null,
                "destinationAddresses": [
                  "192.168.1.2"
                ],
                "destinationFqdns": [],
                "destinationIpGroups": [],
                "destinationPorts": [
                  "80"
                ],
                "ipProtocols": [
                  "ICMP"
                ],
                "name": "Jeff-test",
                "ruleType": "NetworkRule",
                "sourceAddresses": [],
                "sourceIpGroups": [
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-faptsta-pep-dev",
                  "/subscriptions/82979af7-0cd6-4a8f-a3cf-82ff795d0139/resourceGroups/rg-core-azfw/providers/Microsoft.Network/ipGroups/ipg-faptsta-pep-prod"
                ]
              }
            ]
          }
        ]
  tasks:
  - name: Debug Test
    vars:
      query_string: "[].rules[?name == 'Jeff-test'].sourceIpGroups"
    ansible.builtin.debug:      
      msg: "{{ nrcaseoutput.stdout | from_json | json_query(query_string) | flatten }}"


  - name: Debug Test
    vars:      
      jmespath_query: >-
        [].rules[?name == 'Jeff-test'].sourceIpGroups
    ansible.builtin.debug:      
      msg: "{{ nrcaseoutput.stdout | from_json | json_query(jmespath_query) | flatten }}"

  # You can use this to set a variable list
  - name:  Set fact for list of sourceIpGroups where the name=='Jeff-test'
    vars:      
      jmespath_query: >-
        [].rules[?name == 'Jeff-test'].sourceIpGroups
    set_fact:
        mySourceIpGroups: "{{ nrcaseoutput.stdout | from_json | json_query(jmespath_query) | flatten }}"

  - debug:
      var: mySourceIpGroups